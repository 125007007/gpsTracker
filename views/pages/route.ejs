<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>

    <title>Realtime location tracker</title>

    <!-- leaflet css  -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            width: 100%;
            height: 100vh;
        }
    </style>
</head>

<body>
    <div id="map"></div>
</body>
</html>

<!-- leaflet js  -->
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script type="application/json"  src="/static/sorted.json"></script>


<script language="javascript">

    $.getJSON('/static/sorted.json', function(jsonData) {
               //var sorted = JSON.parse('sorted.json');
       //let sorted = require('sorted.json');
       let sorted = jsonData

        // create array for map center
        LatLon = []
        sorted.points.forEach(function(item, index) {
            var point = [item.lat, item.lon]
            console.log(point)
            LatLon.push(point)
        
        })
        console.log(LatLon)

       var map = L.map('map')
       var bounds = new L.LatLngBounds(LatLon);
        map.fitBounds(bounds);
              
         L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
          maxZoom: 18
       }).addTo(map);
       map.attributionControl.setPrefix(''); // Don't show the 'Powered by Leaflet' text.

       
       // Define an array. This could be done in a seperate js file.
       // This tidy formatted section could even be generated by a server-side script
       // or fetched seperately as a jsonp request.
       var markers = sorted.points
       //console.log(markers);

       markers.forEach(function(item, index) {
        //console.log(item, index);
        //console.log(item.lat, item.lon, item.acc, item.batt, item.ischarging)
        var lon = item.lon;
        var lat = item.lat;
        var popupText = item.datetime;

        var markerLocation = new L.LatLng(lat, lon);
        var marker = new L.Marker(markerLocation);
        map.addLayer(marker);
        marker.bindPopup(popupText);
       });
       /*
       //Loop through the markers array
       for (var i=0; i<markers.length; i++) {
         
            var lon = markers[i].lon;
            var lat = markers[i].lat;
            var popupText = markers[i].datetime;

            var markerLocation = new L.LatLng(lat, lon);
            var marker = new L.Marker(markerLocation);
            map.addLayer(marker);
            marker.bindPopup(popupText);
       
       }*/
    });
 </script>
